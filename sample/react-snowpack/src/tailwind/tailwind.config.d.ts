// Generated by dts-bundle-generator v5.7.0

export declare type Size = "xs" | "sm" | "md" | "base" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | "5xl" | "6xl" | "7xl" | "8xl" | "9xl";
export declare type Theme = (x: string, y?: string) => Record<string, unknown>;
export declare type ThemeOption = {
	[x: string]: (t: ReturnType<Theme>) => Record<string, unknown>;
};
export declare type FontSizeProps = {
	[P in Size]: [
		string,
		{
			lineHeight: string;
		}
	];
};
export declare type InputSizeProps = {
	[P in Size]: string;
};
declare const config: {
	purge: never[];
	presets: never[];
	darkMode: boolean;
	theme: {
		screens: {
			sm: string;
			md: string;
			lg: string;
			xl: string;
			"2xl": string;
		};
		colors: {
			transparent: string;
			current: string;
			primary: string;
			secondary: string;
			tertiary: string;
			success: string;
			warning: string;
			error: string;
			aux: string;
			required: string;
			black: string;
			realBlack: string;
			white: string;
			gray: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			red: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			yellow: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			green: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			blue: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			indigo: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			purple: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
			pink: {
				50: string;
				100: string;
				200: string;
				300: string;
				400: string;
				500: string;
				600: string;
				700: string;
				800: string;
				900: string;
			};
		};
		spacing: {
			px: string;
			0: string;
			0.5: string;
			1: string;
			1.5: string;
			2: string;
			2.5: string;
			3: string;
			3.5: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
			11: string;
			12: string;
			14: string;
			16: string;
			20: string;
			24: string;
			28: string;
			32: string;
			36: string;
			40: string;
			44: string;
			48: string;
			52: string;
			56: string;
			60: string;
			64: string;
			72: string;
			80: string;
			96: string;
		};
		animation: {
			none: string;
			spin: string;
			ping: string;
			pulse: string;
			bounce: string;
		};
		backgroundColor: (theme: Theme) => Record<string, unknown>;
		backgroundImage: {
			none: string;
			"gradient-to-t": string;
			"gradient-to-tr": string;
			"gradient-to-r": string;
			"gradient-to-br": string;
			"gradient-to-b": string;
			"gradient-to-bl": string;
			"gradient-to-l": string;
			"gradient-to-tl": string;
		};
		backgroundOpacity: (theme: Theme) => Record<string, unknown>;
		backgroundPosition: {
			bottom: string;
			center: string;
			left: string;
			"left-bottom": string;
			"left-top": string;
			right: string;
			"right-bottom": string;
			"right-top": string;
			top: string;
		};
		backgroundSize: {
			auto: string;
			cover: string;
			contain: string;
		};
		borderColor: (theme: Theme) => {
			DEFAULT: Record<string, unknown>;
		};
		borderOpacity: (theme: Theme) => Record<string, unknown>;
		borderRadius: {
			none: string;
			sm: string;
			DEFAULT: string;
			md: string;
			lg: string;
			xl: string;
			"2xl": string;
			"3xl": string;
			full: string;
		};
		borderWidth: {
			DEFAULT: string;
			0: string;
			2: string;
			4: string;
			8: string;
		};
		boxShadow: {
			sm: string;
			DEFAULT: string;
			md: string;
			lg: string;
			xl: string;
			"2xl": string;
			inner: string;
			none: string;
		};
		container: {};
		cursor: {
			auto: string;
			default: string;
			pointer: string;
			wait: string;
			text: string;
			move: string;
			copy: string;
			"not-allowed": string;
		};
		divideColor: (theme: Theme) => Record<string, unknown>;
		divideOpacity: (theme: Theme) => Record<string, unknown>;
		divideWidth: (theme: Theme) => Record<string, unknown>;
		fill: {
			current: string;
		};
		flex: {
			1: string;
			auto: string;
			initial: string;
			none: string;
		};
		flexGrow: {
			0: string;
			DEFAULT: string;
		};
		flexShrink: {
			0: string;
			DEFAULT: string;
		};
		fontFamily: {
			sans: string[];
			serif: string[];
			mono: string[];
		};
		inputSize: InputSizeProps;
		fontSize: FontSizeProps;
		fontWeight: {
			thin: string;
			extralight: string;
			light: string;
			normal: string;
			medium: string;
			semibold: string;
			bold: string;
			extrabold: string;
			black: string;
		};
		gap: (theme: Theme) => Record<string, unknown>;
		gradientColorStops: (theme: Theme) => Record<string, unknown>;
		gridAutoColumns: {
			auto: string;
			min: string;
			max: string;
			fr: string;
		};
		gridAutoRows: {
			auto: string;
			min: string;
			max: string;
			fr: string;
		};
		gridColumn: {
			auto: string;
			"span-1": string;
			"span-2": string;
			"span-3": string;
			"span-4": string;
			"span-5": string;
			"span-6": string;
			"span-7": string;
			"span-8": string;
			"span-9": string;
			"span-10": string;
			"span-11": string;
			"span-12": string;
			"span-full": string;
		};
		gridColumnEnd: {
			auto: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
			11: string;
			12: string;
			13: string;
		};
		gridColumnStart: {
			auto: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
			11: string;
			12: string;
			13: string;
		};
		gridRow: {
			auto: string;
			"span-1": string;
			"span-2": string;
			"span-3": string;
			"span-4": string;
			"span-5": string;
			"span-6": string;
			"span-full": string;
		};
		gridRowStart: {
			auto: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
		};
		gridRowEnd: {
			auto: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
		};
		transformOrigin: {
			center: string;
			top: string;
			"top-right": string;
			right: string;
			"bottom-right": string;
			bottom: string;
			"bottom-left": string;
			left: string;
			"top-left": string;
		};
		gridTemplateColumns: {
			none: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
			11: string;
			12: string;
		};
		gridTemplateRows: {
			none: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
		};
		height: (theme: Theme) => {
			"1/2": string;
			"1/3": string;
			"2/3": string;
			"1/4": string;
			"2/4": string;
			"3/4": string;
			"1/5": string;
			"2/5": string;
			"3/5": string;
			"4/5": string;
			"1/6": string;
			"2/6": string;
			"3/6": string;
			"4/6": string;
			"5/6": string;
			full: string;
			screen: string;
			auto: string;
		};
		inset: (theme: Theme, { negative }: ThemeOption) => {
			"1/2": string;
			"1/3": string;
			"2/3": string;
			"1/4": string;
			"2/4": string;
			"3/4": string;
			full: string;
			"-1/2": string;
			"-1/3": string;
			"-2/3": string;
			"-1/4": string;
			"-2/4": string;
			"-3/4": string;
			"-full": string;
			auto: string;
		};
		keyframes: {
			spin: {
				to: {
					transform: string;
				};
			};
			ping: {
				"75%, 100%": {
					transform: string;
					opacity: string;
				};
			};
			pulse: {
				"50%": {
					opacity: string;
				};
			};
			bounce: {
				"0%, 100%": {
					transform: string;
					animationTimingFunction: string;
				};
				"50%": {
					transform: string;
					animationTimingFunction: string;
				};
			};
		};
		letterSpacing: {
			tighter: string;
			tight: string;
			normal: string;
			wide: string;
			wider: string;
			widest: string;
		};
		lineHeight: {
			none: string;
			tight: string;
			snug: string;
			normal: string;
			relaxed: string;
			loose: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
		};
		listStyleType: {
			none: string;
			disc: string;
			decimal: string;
		};
		margin: (theme: Theme, { negative }: ThemeOption) => {
			auto: string;
		};
		maxHeight: (theme: Theme) => {
			full: string;
			screen: string;
		};
		maxWidth: (theme: Theme, { breakpoints }: ThemeOption) => {
			none: string;
			0: string;
			xs: string;
			sm: string;
			md: string;
			lg: string;
			xl: string;
			"2xl": string;
			"3xl": string;
			"4xl": string;
			"5xl": string;
			"6xl": string;
			"7xl": string;
			full: string;
			min: string;
			max: string;
			prose: string;
		};
		minHeight: {
			0: string;
			full: string;
			screen: string;
		};
		minWidth: {
			0: string;
			full: string;
			min: string;
			max: string;
		};
		objectPosition: {
			bottom: string;
			center: string;
			left: string;
			"left-bottom": string;
			"left-top": string;
			right: string;
			"right-bottom": string;
			"right-top": string;
			top: string;
		};
		opacity: {
			0: string;
			5: string;
			10: string;
			20: string;
			25: string;
			30: string;
			40: string;
			50: string;
			60: string;
			70: string;
			75: string;
			80: string;
			90: string;
			95: string;
			100: string;
			disabled: string;
			hint: string;
		};
		order: {
			first: string;
			last: string;
			none: string;
			1: string;
			2: string;
			3: string;
			4: string;
			5: string;
			6: string;
			7: string;
			8: string;
			9: string;
			10: string;
			11: string;
			12: string;
		};
		outline: {
			none: string[];
			white: string[];
			black: string[];
		};
		padding: (theme: Theme) => Record<string, unknown>;
		placeholderColor: (theme: Theme) => Record<string, unknown>;
		placeholderOpacity: (theme: Theme) => Record<string, unknown>;
		ringColor: (theme: Theme) => {
			DEFAULT: Record<string, unknown>;
		};
		ringOffsetColor: (theme: Theme) => Record<string, unknown>;
		ringOffsetWidth: {
			0: string;
			1: string;
			2: string;
			4: string;
			8: string;
		};
		ringOpacity: (theme: Theme) => {
			DEFAULT: string;
		};
		ringWidth: {
			DEFAULT: string;
			0: string;
			1: string;
			2: string;
			4: string;
			8: string;
		};
		rotate: {
			"-180": string;
			"-90": string;
			"-45": string;
			"-12": string;
			"-6": string;
			"-3": string;
			"-2": string;
			"-1": string;
			0: string;
			1: string;
			2: string;
			3: string;
			6: string;
			12: string;
			45: string;
			90: string;
			180: string;
		};
		scale: {
			0: string;
			50: string;
			75: string;
			90: string;
			95: string;
			100: string;
			105: string;
			110: string;
			125: string;
			150: string;
		};
		skew: {
			"-12": string;
			"-6": string;
			"-3": string;
			"-2": string;
			"-1": string;
			0: string;
			1: string;
			2: string;
			3: string;
			6: string;
			12: string;
		};
		space: (theme: Theme, { negative }: ThemeOption) => {
			[x: string]: unknown;
		};
		stroke: {
			current: string;
		};
		strokeWidth: {
			0: string;
			1: string;
			2: string;
		};
		textColor: (theme: Theme) => Record<string, unknown>;
		textOpacity: (theme: Theme) => Record<string, unknown>;
		transitionDuration: {
			DEFAULT: string;
			75: string;
			100: string;
			150: string;
			200: string;
			300: string;
			500: string;
			700: string;
			1000: string;
		};
		transitionDelay: {
			75: string;
			100: string;
			150: string;
			200: string;
			300: string;
			500: string;
			700: string;
			1000: string;
		};
		transitionProperty: {
			none: string;
			all: string;
			DEFAULT: string;
			colors: string;
			opacity: string;
			shadow: string;
			transform: string;
			visibility: string;
			display: string;
		};
		transitionTimingFunction: {
			DEFAULT: string;
			linear: string;
			in: string;
			out: string;
			"in-out": string;
		};
		translate: (theme: Theme, { negative }: ThemeOption) => {
			"1/2": string;
			"1/3": string;
			"2/3": string;
			"1/4": string;
			"2/4": string;
			"3/4": string;
			full: string;
			"-1/2": string;
			"-1/3": string;
			"-2/3": string;
			"-1/4": string;
			"-2/4": string;
			"-3/4": string;
			"-full": string;
		};
		width: (theme: Theme) => {
			"1/2": string;
			"1/3": string;
			"2/3": string;
			"1/4": string;
			"2/4": string;
			"3/4": string;
			"1/5": string;
			"2/5": string;
			"3/5": string;
			"4/5": string;
			"1/6": string;
			"2/6": string;
			"3/6": string;
			"4/6": string;
			"5/6": string;
			"1/12": string;
			"2/12": string;
			"3/12": string;
			"4/12": string;
			"5/12": string;
			"6/12": string;
			"7/12": string;
			"8/12": string;
			"9/12": string;
			"10/12": string;
			"11/12": string;
			full: string;
			screen: string;
			min: string;
			max: string;
			auto: string;
		};
		zIndex: {
			auto: string;
			0: string;
			10: string;
			20: string;
			30: string;
			40: string;
			50: string;
		};
	};
	variantOrder: string[];
	variants: {
		accessibility: string[];
		alignContent: string[];
		alignItems: string[];
		alignSelf: string[];
		animation: string[];
		appearance: string[];
		backgroundAttachment: string[];
		backgroundClip: string[];
		backgroundColor: string[];
		backgroundImage: string[];
		backgroundOpacity: string[];
		backgroundPosition: string[];
		backgroundRepeat: string[];
		backgroundSize: string[];
		borderCollapse: string[];
		borderColor: string[];
		borderOpacity: string[];
		borderRadius: string[];
		borderStyle: string[];
		borderWidth: string[];
		boxShadow: string[];
		boxSizing: string[];
		clear: string[];
		container: string[];
		cursor: string[];
		display: string[];
		divideColor: string[];
		divideOpacity: string[];
		divideStyle: string[];
		divideWidth: string[];
		fill: string[];
		flex: string[];
		flexDirection: string[];
		flexGrow: string[];
		flexShrink: string[];
		flexWrap: string[];
		float: string[];
		fontFamily: string[];
		fontSize: string[];
		fontSmoothing: string[];
		fontStyle: string[];
		fontVariantNumeric: string[];
		fontWeight: string[];
		gap: string[];
		gradientColorStops: string[];
		gridAutoColumns: string[];
		gridAutoFlow: string[];
		gridAutoRows: string[];
		gridColumn: string[];
		gridColumnEnd: string[];
		gridColumnStart: string[];
		gridRow: string[];
		gridRowEnd: string[];
		gridRowStart: string[];
		gridTemplateColumns: string[];
		gridTemplateRows: string[];
		height: string[];
		inset: string[];
		justifyContent: string[];
		justifyItems: string[];
		justifySelf: string[];
		letterSpacing: string[];
		lineHeight: string[];
		listStylePosition: string[];
		listStyleType: string[];
		margin: string[];
		maxHeight: string[];
		maxWidth: string[];
		minHeight: string[];
		minWidth: string[];
		objectFit: string[];
		objectPosition: string[];
		opacity: string[];
		order: string[];
		outline: string[];
		overflow: string[];
		overscrollBehavior: string[];
		padding: string[];
		placeContent: string[];
		placeItems: string[];
		placeSelf: string[];
		placeholderColor: string[];
		placeholderOpacity: string[];
		pointerEvents: string[];
		position: string[];
		resize: string[];
		ringColor: string[];
		ringOffsetColor: string[];
		ringOffsetWidth: string[];
		ringOpacity: string[];
		ringWidth: string[];
		rotate: string[];
		scale: string[];
		skew: string[];
		space: string[];
		stroke: string[];
		strokeWidth: string[];
		tableLayout: string[];
		textAlign: string[];
		textColor: string[];
		textDecoration: string[];
		textOpacity: string[];
		textOverflow: string[];
		textTransform: string[];
		transform: string[];
		transformOrigin: string[];
		transitionDelay: string[];
		transitionDuration: string[];
		transitionProperty: string[];
		transitionTimingFunction: string[];
		translate: string[];
		userSelect: string[];
		verticalAlign: string[];
		visibility: string[];
		whitespace: string[];
		width: string[];
		wordBreak: string[];
		zIndex: string[];
	};
	plugins: any[];
};
export default config;

export {};
